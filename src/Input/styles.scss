@import "../colors";

.input-element {
  display: block;
  width: 256px;
  padding: 8px 0;
  font: inherit;
  font-size: 16px;
  color: $color-black;
  background-color: transparent;
  outline: none;
  border: 0;

  &.withIcon:focus,
  &.withIcon.active {
    width: 228px;
  }
}

.input-icon {
  position: absolute;
  top: 20px;
  font-size: 24px;
  pointer-events: none;
  user-select: none;
  transition: all 250ms cubic-bezier(0.23, 1, 0.32, 1);
  transition-delay: 0ms;
}

.input-label {
  position: absolute;
  top: 24px;
  pointer-events: none;
  user-select: none;
  transition: all 250ms cubic-bezier(0.23, 1, 0.32, 1);
  transition-delay: 150ms;

  &.withIcon {
    left: 28px;
  }
}

.input-bar {
  position: relative;
  display: block;
  width: 100%;

  hr {
    position: absolute;
    margin: 0px;
    width: 100%;
    bottom: 2px;
    border-top: none rgb(224, 224, 224);
    border-right: none rgb(224, 224, 224);
    border-bottom: 1px solid rgb(224, 224, 224);
    border-left: none rgb(224, 224, 224);
    border-image: initial;
    box-sizing: content-box;
  }

  hr:last-child {
    width: 0;
    transition: width 250ms cubic-bezier(0.23, 1, 0.32, 1);
    transition-delay: 0ms;
  }
}

.input-error {
  position: relative;
  bottom: -2px;
  font-size: 12px;
  line-height: 14px;
  color: get-color('red', '200');
}

.input {
  display: inline-block;
  position: relative;
  margin: 0 10px;
  padding: 15px 0;
  width: 256px;
  background-color: transparent;

  &.disabled {
    input {
      @extend .input-element;
      cursor: not-allowed;
    }
    span.icon {
      @extend .input-icon;
      color: get-color('grey', '200', .3);
    }
    label {
      @extend .input-label;
      color: get-color('grey', '200', .3);
    }
  }

  &.floating {
    input {
      @extend .input-element;

      &:focus,
      &.active {
        ~ span.icon {
          opacity: 0;
        }
        ~ label {
          left: 0;
          transform: scale(0.75) translate(0px, -28px);
          transform-origin: left top 0px;
          transition-delay: 0ms;
        }
        ~ div.bar hr:last-child {
          width: 100%;
        }
      }
    }
  }

  &:not(.floating) {
    input {
      @extend .input-element;

      &:focus,
      &.active {
        ~ span.icon {
          transform: translateX(232px);
          transition-delay: 150ms;
        }
        ~ div.bar hr:last-child {
          width: 100%;
          transition-delay: 150ms;
        }
      }

      &:focus ~ label:not(.withHint) {
        opacity: 0;
        transition-delay: 0ms;
      }
      &.active ~ label {
        opacity: 0;
        transition-delay: 0ms;
      }
    }
  }

  span.icon {
    @extend .input-icon;
  }

  label {
    @extend .input-label;
  }

  div.bar {
   @extend .input-bar;
  }

  span.error {
    @extend .input-error;
  }
}

/* THEMES */
@each $color-name in $color-names {
  .input.#{$color-name}:not(.disabled) {
    input:focus {
      ~ span.icon {
        color: get-color($color-name, '210');
      }
      ~ div.bar hr:last-child {
        border-top: none get-color($color-name, '210');
        border-right: none get-color($color-name, '210');
        border-bottom: 2px solid get-color($color-name, '210');
        border-left: none get-color($color-name, '210');
      }
    }
    span.icon {
      color: get-color($color-name, '200', .8);
    }
    label {
      color: get-color($color-name, '200', .8);
    }
    div.bar hr:last-child {
      border-top: none get-color($color-name, '200', .8);
      border-right: none get-color($color-name, '200', .8);
      border-bottom: 2px solid get-color($color-name, '200', .8);
      border-left: none get-color($color-name, '200', .8);
    }
  }
}