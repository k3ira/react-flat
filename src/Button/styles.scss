@import '../colors';

/* XButton */
.button-flat {
  background-color: $color-white;
  color: get-color('grey','300');

  &:hover:not(:disabled) {
    background-color: get-color('grey','100', .5);
  }

  &:disabled {
    cursor: not-allowed;
    color: get-color('grey','120');
  }
}

.button-raised {
  background-color: $color-white;
  color: get-color('grey','300');
  box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 0 5px -2px rgba(0,0,0,.2),0 2px 5px 0 rgba(0,0,0,.14);

  &:hover:not(:disabled) {
    background-color: get-color('grey','100');
  }

  &:active:not(:disabled) {
    box-shadow: 0 3px 10px rgba(0,0,0,.15), 0 3px 10px rgba(0,0,0,.2);
  }

  &:disabled {
    cursor: not-allowed;
    background-color: get-color('grey','100');
    color: get-color('grey','200');
    box-shadow: none;
  }
}

.button-circular {
  padding: 0;
  height: 56px;
  width: 56px;
  border-radius: 50%;
  text-align: center;
  background-color: $color-white;
  color: get-color('grey','300');
  box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 0 5px -2px rgba(0,0,0,.2),0 2px 5px 0 rgba(0,0,0,.14);
  z-index: 1;

  &:hover:not(:disabled) {
    background-color: get-color('grey','100');
  }

  &:active:not(:disabled) {
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.14), 0 5px 10px rgba(0, 0, 0, 0.15);
  }

  &:disabled {
    cursor: not-allowed;
    background-color: get-color('grey','100');
    color: get-color('grey','200');
    box-shadow: none;
  }
}

.button-circular-mini {
  height: 40px;
  width: 40px;
}

.button-circular-inverse {
  background-color: get-color('grey','300');
  color: $color-white;

  &:hover:not(:disabled) {
    background-color: get-color('grey','200');
  }

  &:disabled {
    background-color: get-color('grey','230');
    color: get-color('grey','200');
  }
}

.button {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  padding: 0 14px;
  height: 36px;
  line-height: 36px;
  font-weight: 500;
  font-size: 14px;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0;
  overflow: hidden;
  border: none;
  cursor: pointer;
  transition: background-color .2s ease-in-out;

  &:focus {
    outline: none;
  }

  &.flat {
    @extend .button-flat;
  }

  &.raised {
    @extend .button-raised;
  }

  &.circular {
    @extend .button-circular;

    span.icon {
      line-height: 56px;
      svg {
        height: 56px;
      }
    }

    &.inverse {
      @extend .button-circular-inverse;
    }

    &.mini {
      @extend .button-circular-mini;
      span.icon {
        line-height: 40px;
        svg {
          height: 40px;
        }
      }
    }
  }

  span.icon {
    line-height: 36px;
    vertical-align: middle;
    color: currentColor;

    svg {
      width: 20px;
      height: 36px;
      vertical-align: middle;
      fill: currentColor;
    }
  }

  span.icon-text {
    margin: 0 4px;
  }
}

/* THEMES */
@each $color-name in $color-names {
  .button.#{$color-name} {
    @extend .button;

    &.flat {
      @extend .button-flat;
      color: get-color($color-name,'300');

      &:hover:not(:disabled) {
        background-color: get-color($color-name,'100', .4);
      }

      &:disabled {
        color: get-color($color-name,'120');
      }
    }

    &.raised {
      @extend .button-raised;
      color: $color-white;
      background-color: get-color($color-name,'200');

      &:hover:not(:disabled) {
        background-color: get-color($color-name,'220');
      }

      &:active:not(:disabled) {
        box-shadow: 0 3px 10px get-color($color-name,'330',.5), 0 3px 10px get-color($color-name,'330',.2);
      }

      &:disabled {
        background-color: get-color($color-name,'100');
        color: get-color($color-name,'200');
      }
    }

    &.circular {
      @extend .button-circular;
      color: $color-white;
      background-color: get-color($color-name,'200');

      &:hover:not(:disabled) {
        background-color: get-color($color-name,'220');
      }

      &:active:not(:disabled) {
        box-shadow: 0 3px 10px get-color($color-name,'330',.5), 0 3px 10px get-color($color-name,'330',.2);
      }

      &:disabled {
        background-color: get-color($color-name,'100');
        color: get-color($color-name,'200');
      }

      &.inverse {
        color: get-color($color-name,'300');
        background-color: $color-white;

        &:hover:not(:disabled) {
          background-color: get-color($color-name,'100');
        }
      }
    }
  }
}